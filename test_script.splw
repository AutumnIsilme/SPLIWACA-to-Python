


CALL ANONF TAKES int num -> str AS
	SET rv TO ""
	FOR i OF num DO
		SET rv TO rv + "n"
	END FOR
	RETURN rv 
END FUNC WITH 12

SET b TO 12

/*
sdfygasduyf
THIS IS A COMMENT!
*/

//SCOPES !!!!!!!!
SET a TO CALL ANONF <- int num -> str AS
	SET rv TO ""
	FOR i OF num DO
		SET rv TO rv + "n"
	END FOR
	RETURN rv 
END FUNC WITH b

/*
FUNCTION MakeIfForWhileAnons -> Boolean:
        list of integer indexes
        FOR UnfinishedToken with type UncomfirmedExpression IN tokens DO
            run regex
            IF matches are present:
                Create tokens - UnfinishedToken with type BooleanExpr for conditions, Call/Identifier etc. for anonf and p.
                Add indexes of block bodies to indexes list
			END IF
		END FOR
        IF indexes.length = 0 DO
            return False
		END IF
        WHILE length of indexes is greater than 0 DO
            reset indexes to empty
            FOR index OF indexes DO
                run regex over corresponding token
                IF matches.length > 0 DO
                    Create tokens - UnfinishedToken with type BooleanExpr for conditions, Call/Identifier etc. for anonf and p.
                    Add indexes of block bodies to indexes list
				END IF
			END FOR
		END WHILE
RETURN True
*/

PROCEDURE setState12 TAKES int stateModification, int flags AS
	IF flags == 64 DO
		SET GLOBALS.regen TO stateModification
	ELSE IF flags == 32 DO
		SET GLOBALS.health TO stateModification
	END IF
END PROCEDURE

FUNCTION getRandomNumber RETURNS str AS
	RETURN CALL _INTERPRETER.random.random WITH 0, 100
END FUNC

STRUCT vec3 AS
	float x
	float y
	float z
END STRUCT

STRUCT quat AS
	float x
	float y
	float z
	float w
END STRUCT

STRUCT lightning AS
	vec3 position
	quat direction
	REAL brightness
	REAL damage_potential
END STRUCT

STRUCT blueElephant AS
	INT alpha
	STR beta
	LIST gamma
	lightning omega
END STRUCT

SET b TO CREATE blueElephant WITH 1, "2", (3, CALL getRandomNumber, 5), (CREATE lightning WITH (CREATE vec3 WITH 0, 0, 0), (CREATE quat WITH 0, 0, 0, 0), 10.63, 6365.342)